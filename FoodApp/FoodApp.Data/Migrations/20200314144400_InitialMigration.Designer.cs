// <auto-generated />
using System;
using FoodApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FoodApp.Data.Migrations
{
    [DbContext(typeof(FoodAppDbContext))]
    [Migration("20200314144400_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FoodApp.Entities.Food", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FoodCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(5, 2)");

                    b.HasKey("Id");

                    b.HasIndex("FoodCategoryId");

                    b.ToTable("Food");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2461a153-60c5-4099-9d17-93631f60c492"),
                            FoodCategoryId = new Guid("46a29b5e-d39e-4c2a-a581-f22ee29c1c71"),
                            Name = "Farm House Pizza",
                            UnitPrice = 100.00m
                        },
                        new
                        {
                            Id = new Guid("9f5b5155-62d8-46af-b13a-03521b7c1426"),
                            FoodCategoryId = new Guid("46a29b5e-d39e-4c2a-a581-f22ee29c1c71"),
                            Name = "Deluxe Veggie Pizza",
                            UnitPrice = 120.00m
                        },
                        new
                        {
                            Id = new Guid("20e82ea5-ed2a-4694-9ecc-1d9b8a56bec9"),
                            FoodCategoryId = new Guid("46a29b5e-d39e-4c2a-a581-f22ee29c1c71"),
                            Name = "Green Wave Pizza",
                            UnitPrice = 150.00m
                        },
                        new
                        {
                            Id = new Guid("2ee15831-c9ca-4a92-a4e3-f767746d0f2e"),
                            FoodCategoryId = new Guid("853df491-1f78-4e52-8481-169be59fd295"),
                            Name = "Cheese Grill Sandwich",
                            UnitPrice = 70.00m
                        },
                        new
                        {
                            Id = new Guid("e4682fe3-3b42-4a45-ab5a-b045601c48f8"),
                            FoodCategoryId = new Guid("853df491-1f78-4e52-8481-169be59fd295"),
                            Name = "Veg Pan Sandwich",
                            UnitPrice = 80.00m
                        },
                        new
                        {
                            Id = new Guid("084e4591-c780-441e-9c8e-4dc9d29607d2"),
                            FoodCategoryId = new Guid("9780fbe4-a8ea-481e-a5d6-bbd630461a89"),
                            Name = "Coke",
                            UnitPrice = 20.00m
                        },
                        new
                        {
                            Id = new Guid("c56fcc27-5964-4ff8-8e1e-4a9b7af1639b"),
                            FoodCategoryId = new Guid("9780fbe4-a8ea-481e-a5d6-bbd630461a89"),
                            Name = "Maaza",
                            UnitPrice = 20.00m
                        });
                });

            modelBuilder.Entity("FoodApp.Entities.FoodCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.ToTable("FoodCategory");

                    b.HasData(
                        new
                        {
                            Id = new Guid("46a29b5e-d39e-4c2a-a581-f22ee29c1c71"),
                            Name = "Pizza"
                        },
                        new
                        {
                            Id = new Guid("853df491-1f78-4e52-8481-169be59fd295"),
                            Name = "Sandwiches"
                        },
                        new
                        {
                            Id = new Guid("9780fbe4-a8ea-481e-a5d6-bbd630461a89"),
                            Name = "Drinks"
                        });
                });

            modelBuilder.Entity("FoodApp.Entities.FoodCategoryCustomizationMap", b =>
                {
                    b.Property<Guid>("FoodCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FoodCustomizationId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("FoodCategoryId", "FoodCustomizationId");

                    b.HasIndex("FoodCustomizationId");

                    b.ToTable("FoodCategoryCustomizationMap");

                    b.HasData(
                        new
                        {
                            FoodCategoryId = new Guid("46a29b5e-d39e-4c2a-a581-f22ee29c1c71"),
                            FoodCustomizationId = new Guid("f27ba1e8-100b-48b2-a8af-143e137de19c")
                        },
                        new
                        {
                            FoodCategoryId = new Guid("46a29b5e-d39e-4c2a-a581-f22ee29c1c71"),
                            FoodCustomizationId = new Guid("cdb33d31-410d-400d-80d3-5b5a36552087")
                        },
                        new
                        {
                            FoodCategoryId = new Guid("46a29b5e-d39e-4c2a-a581-f22ee29c1c71"),
                            FoodCustomizationId = new Guid("9086ece6-b731-4ed1-aa4a-8c108026f7fd")
                        },
                        new
                        {
                            FoodCategoryId = new Guid("46a29b5e-d39e-4c2a-a581-f22ee29c1c71"),
                            FoodCustomizationId = new Guid("b31238f0-cb90-4685-b557-63b753e626fc")
                        },
                        new
                        {
                            FoodCategoryId = new Guid("853df491-1f78-4e52-8481-169be59fd295"),
                            FoodCustomizationId = new Guid("9201bebb-4d6c-4687-91a4-7852c3eccde8")
                        },
                        new
                        {
                            FoodCategoryId = new Guid("853df491-1f78-4e52-8481-169be59fd295"),
                            FoodCustomizationId = new Guid("cdb33d31-410d-400d-80d3-5b5a36552087")
                        },
                        new
                        {
                            FoodCategoryId = new Guid("853df491-1f78-4e52-8481-169be59fd295"),
                            FoodCustomizationId = new Guid("9086ece6-b731-4ed1-aa4a-8c108026f7fd")
                        },
                        new
                        {
                            FoodCategoryId = new Guid("853df491-1f78-4e52-8481-169be59fd295"),
                            FoodCustomizationId = new Guid("b31238f0-cb90-4685-b557-63b753e626fc")
                        });
                });

            modelBuilder.Entity("FoodApp.Entities.FoodCustomization", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("CanSelectMultipleOptions")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.ToTable("FoodCustomization");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f27ba1e8-100b-48b2-a8af-143e137de19c"),
                            CanSelectMultipleOptions = false,
                            Name = "Pizza Base"
                        },
                        new
                        {
                            Id = new Guid("9201bebb-4d6c-4687-91a4-7852c3eccde8"),
                            CanSelectMultipleOptions = false,
                            Name = "Bread"
                        },
                        new
                        {
                            Id = new Guid("cdb33d31-410d-400d-80d3-5b5a36552087"),
                            CanSelectMultipleOptions = true,
                            Name = "Toppings"
                        },
                        new
                        {
                            Id = new Guid("9086ece6-b731-4ed1-aa4a-8c108026f7fd"),
                            CanSelectMultipleOptions = true,
                            Name = "Cheese Options"
                        },
                        new
                        {
                            Id = new Guid("b31238f0-cb90-4685-b557-63b753e626fc"),
                            CanSelectMultipleOptions = true,
                            Name = "Sauces"
                        });
                });

            modelBuilder.Entity("FoodApp.Entities.FoodCustomizationOption", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FoodCustomizationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(5, 2)");

                    b.HasKey("Id");

                    b.HasIndex("FoodCustomizationId");

                    b.ToTable("FoodCustomizationOption");

                    b.HasData(
                        new
                        {
                            Id = new Guid("70c18ed3-fd4e-41b0-86a4-9f9e68fcd2fb"),
                            FoodCustomizationId = new Guid("f27ba1e8-100b-48b2-a8af-143e137de19c"),
                            Name = "Hand Tossed",
                            UnitPrice = 50m
                        },
                        new
                        {
                            Id = new Guid("b33079a6-a194-430a-bdb1-d481ec9415e7"),
                            FoodCustomizationId = new Guid("f27ba1e8-100b-48b2-a8af-143e137de19c"),
                            Name = "Fresh Pan",
                            UnitPrice = 50m
                        },
                        new
                        {
                            Id = new Guid("19162233-6bcc-4ed1-bf67-c686971d97c4"),
                            FoodCustomizationId = new Guid("f27ba1e8-100b-48b2-a8af-143e137de19c"),
                            Name = "Thin Crust",
                            UnitPrice = 50m
                        },
                        new
                        {
                            Id = new Guid("5398b950-ec7a-41d8-ab5e-4a3b47e8221f"),
                            FoodCustomizationId = new Guid("cdb33d31-410d-400d-80d3-5b5a36552087"),
                            Name = "Black Olive",
                            UnitPrice = 20m
                        },
                        new
                        {
                            Id = new Guid("11d19067-02b5-4048-934d-8b12003c699b"),
                            FoodCustomizationId = new Guid("cdb33d31-410d-400d-80d3-5b5a36552087"),
                            Name = "Red Paprika",
                            UnitPrice = 20m
                        },
                        new
                        {
                            Id = new Guid("e38bfc14-7c57-44b9-80ee-4d15ce6a4cf3"),
                            FoodCustomizationId = new Guid("cdb33d31-410d-400d-80d3-5b5a36552087"),
                            Name = "Golden Corn",
                            UnitPrice = 20m
                        },
                        new
                        {
                            Id = new Guid("87d5d2b5-ad73-4de6-9b69-717b5d07b9f5"),
                            FoodCustomizationId = new Guid("cdb33d31-410d-400d-80d3-5b5a36552087"),
                            Name = "Panner",
                            UnitPrice = 20m
                        },
                        new
                        {
                            Id = new Guid("3a3a44f0-2933-43d5-a315-24559a5164e0"),
                            FoodCustomizationId = new Guid("9086ece6-b731-4ed1-aa4a-8c108026f7fd"),
                            Name = "Mozzarella",
                            UnitPrice = 10m
                        },
                        new
                        {
                            Id = new Guid("73698dd9-64f6-4217-abb4-f9ccbb3a6bfc"),
                            FoodCustomizationId = new Guid("9086ece6-b731-4ed1-aa4a-8c108026f7fd"),
                            Name = "Cheddar",
                            UnitPrice = 10m
                        },
                        new
                        {
                            Id = new Guid("e83bf8ce-12a1-46d4-bb57-f1fa0acb28d9"),
                            FoodCustomizationId = new Guid("b31238f0-cb90-4685-b557-63b753e626fc"),
                            Name = "Barbeque",
                            UnitPrice = 10m
                        },
                        new
                        {
                            Id = new Guid("b984a618-766b-4c1c-a610-5e149e3cfc6a"),
                            FoodCustomizationId = new Guid("b31238f0-cb90-4685-b557-63b753e626fc"),
                            Name = "Honey Mustard",
                            UnitPrice = 10m
                        },
                        new
                        {
                            Id = new Guid("32d77afd-524e-43b0-ae32-f32da9ba2bd8"),
                            FoodCustomizationId = new Guid("b31238f0-cb90-4685-b557-63b753e626fc"),
                            Name = "Southwest",
                            UnitPrice = 10m
                        },
                        new
                        {
                            Id = new Guid("4eceef39-4a83-4020-bb29-ad780ef84fa4"),
                            FoodCustomizationId = new Guid("9201bebb-4d6c-4687-91a4-7852c3eccde8"),
                            Name = "Multi grain",
                            UnitPrice = 10m
                        },
                        new
                        {
                            Id = new Guid("be156703-655e-4ef3-a37d-25b52435fc55"),
                            FoodCustomizationId = new Guid("9201bebb-4d6c-4687-91a4-7852c3eccde8"),
                            Name = "Oat",
                            UnitPrice = 10m
                        });
                });

            modelBuilder.Entity("FoodApp.Entities.Restaurant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.ToTable("Restaurant");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ff77b5c9-bfdd-4493-981e-b5a919d431fb"),
                            Name = "McD"
                        },
                        new
                        {
                            Id = new Guid("ad614b15-fa07-423b-9d6e-44311ba4f53c"),
                            Name = "Pizza Hut"
                        },
                        new
                        {
                            Id = new Guid("f03ff63b-d988-4978-bde8-868006cf7f72"),
                            Name = "Sandwich Express"
                        });
                });

            modelBuilder.Entity("FoodApp.Entities.RestaurantFoodCategoryMap", b =>
                {
                    b.Property<Guid>("FoodCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RestaurantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("FoodCategoryId", "RestaurantId");

                    b.HasIndex("RestaurantId");

                    b.ToTable("RestaurantFoodCategoryMap");

                    b.HasData(
                        new
                        {
                            FoodCategoryId = new Guid("853df491-1f78-4e52-8481-169be59fd295"),
                            RestaurantId = new Guid("ff77b5c9-bfdd-4493-981e-b5a919d431fb")
                        },
                        new
                        {
                            FoodCategoryId = new Guid("46a29b5e-d39e-4c2a-a581-f22ee29c1c71"),
                            RestaurantId = new Guid("ff77b5c9-bfdd-4493-981e-b5a919d431fb")
                        },
                        new
                        {
                            FoodCategoryId = new Guid("9780fbe4-a8ea-481e-a5d6-bbd630461a89"),
                            RestaurantId = new Guid("ff77b5c9-bfdd-4493-981e-b5a919d431fb")
                        },
                        new
                        {
                            FoodCategoryId = new Guid("46a29b5e-d39e-4c2a-a581-f22ee29c1c71"),
                            RestaurantId = new Guid("ad614b15-fa07-423b-9d6e-44311ba4f53c")
                        },
                        new
                        {
                            FoodCategoryId = new Guid("9780fbe4-a8ea-481e-a5d6-bbd630461a89"),
                            RestaurantId = new Guid("ad614b15-fa07-423b-9d6e-44311ba4f53c")
                        },
                        new
                        {
                            FoodCategoryId = new Guid("853df491-1f78-4e52-8481-169be59fd295"),
                            RestaurantId = new Guid("f03ff63b-d988-4978-bde8-868006cf7f72")
                        },
                        new
                        {
                            FoodCategoryId = new Guid("9780fbe4-a8ea-481e-a5d6-bbd630461a89"),
                            RestaurantId = new Guid("f03ff63b-d988-4978-bde8-868006cf7f72")
                        });
                });

            modelBuilder.Entity("FoodApp.Entities.Food", b =>
                {
                    b.HasOne("FoodApp.Entities.FoodCategory", "FoodCategory")
                        .WithMany("Foods")
                        .HasForeignKey("FoodCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FoodApp.Entities.FoodCategoryCustomizationMap", b =>
                {
                    b.HasOne("FoodApp.Entities.FoodCategory", "FoodCategory")
                        .WithMany("FoodCategoryCustomizationMaps")
                        .HasForeignKey("FoodCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FoodApp.Entities.FoodCustomization", "FoodCustomization")
                        .WithMany("FoodCategoryCustomizationMaps")
                        .HasForeignKey("FoodCustomizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FoodApp.Entities.FoodCustomizationOption", b =>
                {
                    b.HasOne("FoodApp.Entities.FoodCustomization", "FoodCustomization")
                        .WithMany("FoodCustomizationOptions")
                        .HasForeignKey("FoodCustomizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FoodApp.Entities.RestaurantFoodCategoryMap", b =>
                {
                    b.HasOne("FoodApp.Entities.FoodCategory", "FoodCategory")
                        .WithMany("RestaurantFoodCategoryMaps")
                        .HasForeignKey("FoodCategoryId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("FoodApp.Entities.Restaurant", "Restaurant")
                        .WithMany("RestaurantFoodCategoryMaps")
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
